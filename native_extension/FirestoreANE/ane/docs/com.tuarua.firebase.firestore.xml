<?xml version="1.0" encoding="UTF-8"?><apiPackage id="com.tuarua.firebase.firestore"><apiName>com.tuarua.firebase.firestore</apiName><apiDetail/><apiClassifier id="com.tuarua.firebase.firestore:Order"><apiName>Order</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.firestore:Order:Order"><apiName>Order</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>by</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>descending</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.firestore:Order:by"><apiName>by</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:Order:descending"><apiName>descending</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.firestore:FirestoreError"><apiName>FirestoreError</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Error</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.firestore:FirestoreError:FirestoreError"><apiName>FirestoreError</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>message</apiItemName><apiType value="any"/><apiData/></apiParam><apiParam><apiItemName>id</apiItemName><apiType value="any"/><apiData>0</apiData></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor></apiClassifier><apiClassifier id="com.tuarua.firebase.firestore:Query"><apiName>Query</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.firestore:Query:Query"><apiName>Query</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.firebase.firestore:Query:endAt"><apiName>endAt</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>com.tuarua.firebase.firestore:Query</apiOperationClassifier></apiReturn><apiParam><apiItemName>args</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.firestore:Query:endBefore"><apiName>endBefore</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>com.tuarua.firebase.firestore:Query</apiOperationClassifier></apiReturn><apiParam><apiItemName>args</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.firestore:Query:getDocuments"><apiName>getDocuments</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.firestore:Query:limit"><apiName>limit</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>com.tuarua.firebase.firestore:Query</apiOperationClassifier></apiReturn><apiParam><apiItemName>to</apiItemName><apiType value="int"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.firestore:Query:map"><apiName>map</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>to</apiItemName><apiType value="Class"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.firestore:Query:order"><apiName>order</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>com.tuarua.firebase.firestore:Query</apiOperationClassifier></apiReturn><apiParam><apiItemName>by</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>descending</apiItemName><apiType value="Boolean"/><apiData>false</apiData></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.firestore:Query:startAfter"><apiName>startAfter</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>com.tuarua.firebase.firestore:Query</apiOperationClassifier></apiReturn><apiParam><apiItemName>args</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.firestore:Query:startAt"><apiName>startAt</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>com.tuarua.firebase.firestore:Query</apiOperationClassifier></apiReturn><apiParam><apiItemName>args</apiItemName><apiType value="restParam"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.firestore:Query:where"><apiName>where</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>com.tuarua.firebase.firestore:Query</apiOperationClassifier></apiReturn><apiParam><apiItemName>fieldPath</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>operator</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="any"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiValue id="com.tuarua.firebase.firestore:Query:protected:_mapTo"><apiName>_mapTo</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="Class"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:Query:protected:_path"><apiName>_path</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:Query:protected:endAts"><apiName>endAts</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:Query:protected:endBefores"><apiName>endBefores</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:Query:protected:limitTo"><apiName>limitTo</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>10000</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:Query:protected:orderClauses"><apiName>orderClauses</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$com.tuarua.firebase.firestore:Order"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:Query:protected:startAfters"><apiName>startAfters</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:Query:protected:startAts"><apiName>startAts</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Array"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:Query:protected:whereClauses"><apiName>whereClauses</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="protected"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$com.tuarua.firebase.firestore:Where"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:Query:mapTo:get"><apiName>mapTo</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Class"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.firestore:DocumentChangeType"><apiName>DocumentChangeType</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.firebase.firestore:DocumentChangeType:ADDED"><apiName>ADDED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:DocumentChangeType:MODIFIED"><apiName>MODIFIED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:DocumentChangeType:REMOVED"><apiName>REMOVED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.firestore:DocumentChange"><apiName>DocumentChange</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.firestore:DocumentChange:DocumentChange"><apiName>DocumentChange</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.firestore:DocumentChange:documentId"><apiName>documentId</apiName><shortdesc> The ID of the document for which this `DocumentSnapshot` contains data.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc> The ID of the document for which this `DocumentSnapshot` contains data. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:DocumentChange:newIndex"><apiName>newIndex</apiName><shortdesc>
     The index of the changed document in the result set immediately after this DocumentChange
     (i.e.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
     The index of the changed document in the result set immediately after this DocumentChange
     (i.e. supposing that all prior DocumentChange objects and the current DocumentChange object
     have been applied).
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:DocumentChange:oldIndex"><apiName>oldIndex</apiName><shortdesc>
     The index of the changed document in the result set immediately prior to this DocumentChange
     (i.e.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc>
     The index of the changed document in the result set immediately prior to this DocumentChange
     (i.e. supposing that all prior DocumentChange objects have been applied).
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:DocumentChange:type"><apiName>type</apiName><shortdesc> The type of change that occurred (added, modified, or removed).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="int"/></apiValueDef><apiDesc> The type of change that occurred (added, modified, or removed). </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.firestore:QuerySnapshot"><apiName>QuerySnapshot</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.firestore:QuerySnapshot:QuerySnapshot"><apiName>QuerySnapshot</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.firestore:QuerySnapshot:documentChanges"><apiName>documentChanges</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$com.tuarua.firebase.firestore:DocumentChange"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:QuerySnapshot:documents"><apiName>documents</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>unknown</apiData><apiType value="Vector$com.tuarua.firebase.firestore:DocumentSnapshot"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:QuerySnapshot:metadata"><apiName>metadata</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>com.tuarua.firebase.firestore:SnapshotMetadata</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:QuerySnapshot:isEmpty:get"><apiName>isEmpty</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:QuerySnapshot:size:get"><apiName>size</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="int"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.firestore:CollectionReference"><apiName>CollectionReference</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>com.tuarua.firebase.firestore:Query</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.firestore:CollectionReference:CollectionReference"><apiName>CollectionReference</apiName><shortdesc>
     Gets a `CollectionReference` referring to the collection at the specified path within the
     database.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>path</apiItemName><apiType value="String"/><apiDesc>    </apiDesc></apiParam></apiConstructorDef><apiDesc>
     Gets a `CollectionReference` referring to the collection at the specified path within the
     database.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.firebase.firestore:CollectionReference:add"><apiName>add</apiName><shortdesc/><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>com.tuarua.firebase.firestore:CollectionReference</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="any"/></apiParam></apiOperationDef></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.firestore:CollectionReference:document"><apiName>document</apiName><shortdesc>
     Returns a DocumentReference pointing to a new document with an auto-generated ID.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A DocumentReference pointing to a new document with an auto-generated ID.
     </apiDesc><apiOperationClassifier>com.tuarua.firebase.firestore:DocumentReference</apiOperationClassifier></apiReturn><apiParam><apiItemName>documentPath</apiItemName><apiType value="String"/><apiData>null</apiData></apiParam></apiOperationDef><apiDesc>
     Returns a DocumentReference pointing to a new document with an auto-generated ID.
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua.firebase.firestore:CollectionReference:id:get"><apiName>id</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:CollectionReference:parent:get"><apiName>parent</apiName><shortdesc>
     For subcollections, `parent` returns the containing `DocumentReference`.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>com.tuarua.firebase.firestore:DocumentReference</apiValueClassifier></apiValueDef><apiDesc>
     For subcollections, `parent` returns the containing `DocumentReference`.  For root
     collections, null is returned.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:CollectionReference:path:get"><apiName>path</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.firestore:GeoPoint"><apiName>GeoPoint</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.firestore:GeoPoint:GeoPoint"><apiName>GeoPoint</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.firestore:GeoPoint:latitude"><apiName>latitude</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:GeoPoint:longitude"><apiName>longitude</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.firestore:DocumentSnapshot"><apiName>DocumentSnapshot</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.firestore:DocumentSnapshot:DocumentSnapshot"><apiName>DocumentSnapshot</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>id</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>data</apiItemName><apiType value="any"/></apiParam><apiParam><apiItemName>exists</apiItemName><apiType value="Boolean"/></apiParam><apiParam><apiItemName>metadata</apiItemName><apiOperationClassifier>com.tuarua.firebase.firestore:SnapshotMetadata</apiOperationClassifier></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.firestore:DocumentSnapshot:data"><apiName>data</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value=""/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:DocumentSnapshot:exists"><apiName>exists</apiName><shortdesc> True if the document exists.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>false</apiData><apiType value="Boolean"/></apiValueDef><apiDesc> True if the document exists. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:DocumentSnapshot:id"><apiName>id</apiName><shortdesc> The ID of the document for which this `DocumentSnapshot` contains data.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc> The ID of the document for which this `DocumentSnapshot` contains data. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:DocumentSnapshot:metadata"><apiName>metadata</apiName><shortdesc> Metadata about this snapshot concerning its source and if it has local modifications.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueClassifier>com.tuarua.firebase.firestore:SnapshotMetadata</apiValueClassifier></apiValueDef><apiDesc> Metadata about this snapshot concerning its source and if it has local modifications. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.firestore:SnapshotMetadata"><apiName>SnapshotMetadata</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.firestore:SnapshotMetadata:SnapshotMetadata"><apiName>SnapshotMetadata</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.firestore:SnapshotMetadata:hasPendingWrites"><apiName>hasPendingWrites</apiName><shortdesc>
     Returns true if the snapshot contains the result of local writes (e.g.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
     Returns true if the snapshot contains the result of local writes (e.g. set() or update() calls)
     that have not yet been committed to the backend. If your listener has opted into metadata updates
     you will receive another snapshot with `hasPendingWrites` equal to NO once the writes have
     been committed to the backend.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:SnapshotMetadata:isFromCache"><apiName>isFromCache</apiName><shortdesc>
     Returns true if the snapshot was created from cached data rather than guaranteed up-to-date server
     data.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="Boolean"/></apiValueDef><apiDesc>
     Returns true if the snapshot was created from cached data rather than guaranteed up-to-date server
     data. If your listener has opted into metadata updates you will receive another snapshot
     with `isFromCache` equal to NO once
     the client has received up-to-date data from the backend.
     </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.firestore:FirestoreErrorCode"><apiName>FirestoreErrorCode</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiValue id="com.tuarua.firebase.firestore:FirestoreErrorCode:ABORTED"><apiName>ABORTED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>10</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:FirestoreErrorCode:ALREADY_EXISTS"><apiName>ALREADY_EXISTS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>6</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:FirestoreErrorCode:CANCELLED"><apiName>CANCELLED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:FirestoreErrorCode:DATA_LOSS"><apiName>DATA_LOSS</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>15</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:FirestoreErrorCode:DEADLINE_EXCEEDED"><apiName>DEADLINE_EXCEEDED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:FirestoreErrorCode:FAILED_PRECONDITION"><apiName>FAILED_PRECONDITION</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>9</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:FirestoreErrorCode:INTERNAL"><apiName>INTERNAL</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>13</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:FirestoreErrorCode:INVALID_ARGUMENT"><apiName>INVALID_ARGUMENT</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:FirestoreErrorCode:NOT_FOUND"><apiName>NOT_FOUND</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:FirestoreErrorCode:OK"><apiName>OK</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:FirestoreErrorCode:OUT_OF_RANGE"><apiName>OUT_OF_RANGE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>11</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:FirestoreErrorCode:PERMISSION_DENIED"><apiName>PERMISSION_DENIED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>7</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:FirestoreErrorCode:RESOURCE_EXHAUSTED"><apiName>RESOURCE_EXHAUSTED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>8</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:FirestoreErrorCode:UNAUTHENTICATED"><apiName>UNAUTHENTICATED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>16</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:FirestoreErrorCode:UNAVAILABLE"><apiName>UNAVAILABLE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>14</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:FirestoreErrorCode:UNIMPLEMENTED"><apiName>UNIMPLEMENTED</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>12</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:FirestoreErrorCode:UNKNOWN"><apiName>UNKNOWN</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="int"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.firestore:FirestoreSettings"><apiName>FirestoreSettings</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.firestore:FirestoreSettings:FirestoreSettings"><apiName>FirestoreSettings</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.firestore:FirestoreSettings:areTimestampsInSnapshotsEnabled"><apiName>areTimestampsInSnapshotsEnabled</apiName><shortdesc>
     Enables the use of FIRTimestamps for timestamp fields in FIRDocumentSnapshots.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/></apiValueDef><apiDesc>
     Enables the use of FIRTimestamps for timestamp fields in FIRDocumentSnapshots.
     
     Currently, Firestore returns timestamp fields as an NSDate but NSDate is implemented as a double
     which loses precision and causes unexpected behavior when using a timestamp from a snapshot as
     a part of a subsequent query.
     
     Setting timestampsInSnapshotsEnabled to true will cause Firestore to return FIRTimestamp values
     instead of NSDate, avoiding this kind of problem. To make this work you must also change any code
     that uses NSDate to use FIRTimestamp instead.
     
     NOTE: in the future timestampsInSnapshotsEnabled = true will become the default and this option
     will be removed so you should change your code to use FIRTimestamp now and opt-in to this new
     behavior as soon as you can.
     </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:FirestoreSettings:host"><apiName>host</apiName><shortdesc> The hostname to connect to.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiType value="String"/></apiValueDef><apiDesc> The hostname to connect to. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:FirestoreSettings:isPersistenceEnabled"><apiName>isPersistenceEnabled</apiName><shortdesc> Set to false to disable local persistent storage.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/></apiValueDef><apiDesc> Set to false to disable local persistent storage. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:FirestoreSettings:isSslEnabled"><apiName>isSslEnabled</apiName><shortdesc> Whether to use SSL when connecting.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiData>true</apiData><apiType value="Boolean"/></apiValueDef><apiDesc> Whether to use SSL when connecting. </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.firestore:Where"><apiName>Where</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.firestore:Where:Where"><apiName>Where</apiName><shortdesc/><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>fieldPath</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>operator</apiItemName><apiType value="String"/></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="any"/></apiParam></apiConstructorDef></apiConstructorDetail></apiConstructor><apiValue id="com.tuarua.firebase.firestore:Where:fieldPath:get"><apiName>fieldPath</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:Where:operator:get"><apiName>operator</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:Where:value:get"><apiName>value</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="com.tuarua.firebase.firestore:WriteBatch"><apiName>WriteBatch</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.firestore:WriteBatch:WriteBatch"><apiName>WriteBatch</apiName><shortdesc> Creates a new write batch </shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/></apiConstructorDef><apiDesc> Creates a new write batch </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.firebase.firestore:WriteBatch:clear"><apiName>clear</apiName><shortdesc>
     Deletes the document referred to by `documentReference`.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>documentReference</apiItemName><apiOperationClassifier>com.tuarua.firebase.firestore:DocumentReference</apiOperationClassifier><apiDesc>    </apiDesc></apiParam></apiOperationDef><apiDesc>
     Deletes the document referred to by `documentReference`.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.firestore:WriteBatch:commit"><apiName>commit</apiName><shortdesc>
     Commits all of the writes in this write batch as a single atomic unit.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>This function will only execute
     when the client is online and the commit has completed against the server. The
     completion handler will not be called when the device is offline, though local
     changes will be visible immediately.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Commits all of the writes in this write batch as a single atomic unit.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.firestore:WriteBatch:update"><apiName>update</apiName><shortdesc>
     Updates fields in the document referred to by `documentReference`.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>documentReference</apiItemName><apiOperationClassifier>com.tuarua.firebase.firestore:DocumentReference</apiOperationClassifier><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>data</apiItemName><apiType value="any"/><apiDesc>    </apiDesc></apiParam></apiOperationDef><apiDesc>
     Updates fields in the document referred to by `documentReference`.
     If document does not exist, the write batch will fail.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.firestore:WriteBatch:set"><apiName>set</apiName><shortdesc>
     Writes to the document referred to by `documentReference`.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>This `FIRWriteBatch` instance. Used for chaining method calls.
     </apiDesc><apiType value="void"/></apiReturn><apiParam><apiItemName>documentReference</apiItemName><apiOperationClassifier>com.tuarua.firebase.firestore:DocumentReference</apiOperationClassifier><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>data</apiItemName><apiType value="any"/><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>merge</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>    </apiDesc></apiParam></apiOperationDef><apiDesc>
     Writes to the document referred to by `documentReference`. If the document doesn't yet exist,
     this method creates it and then sets the data. If the document exists, this method overwrites
     the document data with the new values.
     
     </apiDesc></apiOperationDetail></apiOperation></apiClassifier><apiClassifier id="com.tuarua.firebase.firestore:DocumentReference"><apiName>DocumentReference</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiConstructor id="com.tuarua.firebase.firestore:DocumentReference:DocumentReference"><apiName>DocumentReference</apiName><shortdesc>
     Returns a DocumentReference pointing to a new document with an auto-generated ID.</shortdesc><prolog/><apiConstructorDetail><apiConstructorDef><apiAccess value="public"/><apiParam><apiItemName>path</apiItemName><apiType value="String"/></apiParam></apiConstructorDef><apiDesc>
     Returns a DocumentReference pointing to a new document with an auto-generated ID.
     
     </apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="com.tuarua.firebase.firestore:DocumentReference:addSnapshotListener"><apiName>addSnapshotListener</apiName><shortdesc>
     Attaches a listener for DocumentSnapshot events.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>The listener to attach.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Attaches a listener for DocumentSnapshot events.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.firestore:DocumentReference:getDocument"><apiName>getDocument</apiName><shortdesc>
     Reads the document referenced by this `DocumentReference`.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>executes once the document has been successfully read.
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Reads the document referenced by this `DocumentReference`.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.firestore:DocumentReference:map"><apiName>map</apiName><shortdesc>
     Converts the Document into an as3 Class with properties mapped to the Document's fields.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>to</apiItemName><apiType value="Class"/><apiDesc>AS3 class to map to
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Converts the Document into an as3 Class with properties mapped to the Document's fields.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.firestore:DocumentReference:removeSnapshotListener"><apiName>removeSnapshotListener</apiName><shortdesc>
     Detaches a listener for DocumentSnapshot events.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>The listener to dettach.
     
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Detaches a listener for DocumentSnapshot events.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.firestore:DocumentReference:remove"><apiName>remove</apiName><shortdesc>
     Deletes the document referred to by this `DocumentReference`.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>    </apiDesc></apiParam></apiOperationDef><apiDesc>
     Deletes the document referred to by this `DocumentReference`.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.firestore:DocumentReference:update"><apiName>update</apiName><shortdesc>
     Updates fields in the document referred to by this `DocumentReference`.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="any"/><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>    </apiDesc></apiParam></apiOperationDef><apiDesc>
     Updates fields in the document referred to by this `DocumentReference`. If the document
     does not exist, the update fails and the specified completion block receives an error.
     
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase.firestore:DocumentReference:set"><apiName>set</apiName><shortdesc>
     Writes to the document referred to by this DocumentReference.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>data</apiItemName><apiType value="any"/><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>merge</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>    </apiDesc></apiParam></apiOperationDef><apiDesc>
     Writes to the document referred to by this DocumentReference. If the document does not yet
     exist, it will be created.
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua.firebase.firestore:DocumentReference:id:get"><apiName>id</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:DocumentReference:mapTo:get"><apiName>mapTo</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Class"/></apiValueDef></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:DocumentReference:parent:get"><apiName>parent</apiName><shortdesc> A reference to the collection to which this `DocumentReference` belongs.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>com.tuarua.firebase.firestore:CollectionReference</apiValueClassifier></apiValueDef><apiDesc> A reference to the collection to which this `DocumentReference` belongs. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase.firestore:DocumentReference:path:get"><apiName>path</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="String"/></apiValueDef></apiValueDetail></apiValue></apiClassifier></apiPackage>