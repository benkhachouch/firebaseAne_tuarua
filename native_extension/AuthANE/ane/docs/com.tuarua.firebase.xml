<?xml version="1.0" encoding="UTF-8"?><apiPackage id="com.tuarua.firebase"><apiName>com.tuarua.firebase</apiName><apiDetail/><apiClassifier id="com.tuarua.firebase:AuthANE"><apiName>AuthANE</apiName><shortdesc/><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiFinal/><apiBaseClassifier>flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef></apiClassifierDetail><apiOperation id="com.tuarua.firebase:AuthANE:createUserWithEmailAndPassword"><apiName>createUserWithEmailAndPassword</apiName><shortdesc> Creates and, on success, signs in a user with the given email address and password.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>email</apiItemName><apiType value="String"/><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>password</apiItemName><apiType value="String"/><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>Optional Function to be called on completion.
     The function is expected to have the following signature:
     <codeblock rev="3.0">
     function callback(error:AuthError):void {
     
     }
     </codeblock>
     </apiDesc></apiParam></apiOperationDef><apiDesc> Creates and, on success, signs in a user with the given email address and password.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:AuthANE:dispose"><apiName>dispose</apiName><shortdesc> Disposes the ANE </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiStatic/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Disposes the ANE </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:AuthANE:sendPasswordResetEmail"><apiName>sendPasswordResetEmail</apiName><shortdesc> Initiates a password reset for the given email address.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>email</apiItemName><apiType value="String"/><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>Optional Function to be called on completion.
     The function is expected to have the following signature:
     <codeblock rev="3.0">
     function callback(error:AuthError):void {
     
     }
     </codeblock>
     </apiDesc></apiParam></apiOperationDef><apiDesc> Initiates a password reset for the given email address.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:AuthANE:signInAnonymously"><apiName>signInAnonymously</apiName><shortdesc> Asynchronously creates and becomes an anonymous user.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>Optional Function to be called on completion.
     The function is expected to have the following signature:
     <codeblock rev="3.0">
     function callback(error:AuthError):void {
     
     }
     </codeblock>
     </apiDesc></apiParam></apiOperationDef><apiDesc> Asynchronously creates and becomes an anonymous user.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:AuthANE:signInWithCustomToken"><apiName>signInWithCustomToken</apiName><shortdesc> Asynchronously signs in to Firebase with the given Auth token.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>token</apiItemName><apiType value="String"/><apiDesc>A self-signed custom auth token.
     </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>Optional Function to be called on completion.
     The function is expected to have the following signature:
     <codeblock rev="3.0">
     function callback(error:AuthError):void {
     
     }
     </codeblock>
     </apiDesc></apiParam></apiOperationDef><apiDesc> Asynchronously signs in to Firebase with the given Auth token.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:AuthANE:signIn"><apiName>signIn</apiName><shortdesc> Asynchronously signs in to Firebase with the given 3rd-party credentials (e.g.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>credential</apiItemName><apiOperationClassifier>com.tuarua.firebase.auth:AuthCredential</apiOperationClassifier><apiDesc>    </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiData>null</apiData><apiDesc>Optional Function to be called on completion.
     The function is expected to have the following signature:
     <codeblock rev="3.0">
     function callback(error:AuthError):void {
     
     }
     </codeblock>
     </apiDesc></apiParam></apiOperationDef><apiDesc> Asynchronously signs in to Firebase with the given 3rd-party credentials (e.g. a Facebook
     login Access Token, a Google ID Token/Access Token pair, etc.) and returns additional
     identity provider data.
     </apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:AuthANE:signOut"><apiName>signOut</apiName><shortdesc> Signs out the current user.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> Signs out the current user.</apiDesc></apiOperationDetail></apiOperation><apiOperation id="com.tuarua.firebase:AuthANE:verifyPhoneNumber"><apiName>verifyPhoneNumber</apiName><shortdesc>
     Starts the phone number authentication flow by sending a verifcation code to the
     specified phone number.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>phoneNumber</apiItemName><apiType value="String"/><apiDesc>The phone number to be verified.
     </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>Optional Function to be called on completion.
     The function is expected to have the following signature:
     <codeblock rev="3.0">
     function callback(error:AuthError):void {
     
     }
     </codeblock>
     </apiDesc></apiParam></apiOperationDef><apiDesc>
     Starts the phone number authentication flow by sending a verifcation code to the
     specified phone number.
     
     </apiDesc></apiOperationDetail></apiOperation><apiValue id="com.tuarua.firebase:AuthANE:auth:get"><apiName>auth</apiName><shortdesc> The ANE instance.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiStatic/><apiValueAccess value="read"/><apiValueClassifier>com.tuarua.firebase:AuthANE</apiValueClassifier></apiValueDef><apiDesc> The ANE instance. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase:AuthANE:currentUser:get"><apiName>currentUser</apiName><shortdesc> Synchronously gets the cached current user, or null if there is none.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>com.tuarua.firebase.auth:FirebaseUser</apiValueClassifier></apiValueDef><apiDesc> Synchronously gets the cached current user, or null if there is none. </apiDesc></apiValueDetail></apiValue><apiValue id="com.tuarua.firebase:AuthANE:languageCode:set"><apiName>languageCode</apiName><shortdesc>The current user language code.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="String"/></apiValueDef><apiDesc>The current user language code.</apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>